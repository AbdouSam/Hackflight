// AUTO-GENERATED CODE: DO NOT EDIT!!!\n\n'

#pragma once

#include <stdint.h>

class MSP_Parser {

    private:

        static const int MAXBUF = 256;

        uint8_t  _state;

        uint8_t _message_direction;
        uint8_t _message_id;
        uint8_t _message_length_expected;
        uint8_t _message_length_received;
        uint8_t _message_buffer[MAXBUF];
        uint8_t _message_checksum;

    public:

        MSP_Parser(void) 
        {
            _state = 0;
        }

        void parse(byte b) 
        {
            switch (_state) {

                case 0:               // sync char 1
                    if (b == 36) { // $
                        _state++;
                    }
                    break;        

                case 1:               // sync char 2
                    if (b == 77) { // M
                        _state++;
                    }
                    else {            // restart and try again
                        _state = 0;
                    }
                    break;

                case 2:               // direction (should be >)
                    if (b == 62) { // >
                        _message_direction = 1;
                    }
                    else {            // <
                        _message_direction = 0;
                    }
                    _state++;
                    break;

                case 3:
                    _message_length_expected = b;
                    _message_checksum = b;
                    // setup arraybuffer
                    _message_length_received = 0;
                    _state++;
                    break;

                case 4:
                    _message_id = b;
                    _message_checksum ^= b;
                    if (_message_length_expected > 0) {
                        // process payload
                        _state++;
                    }
                    else {
                        // no payload
                        _state += 2;
                    }
                    break;

                case 5: // payload
                    _message_buffer[_message_length_received] = b;
                    _message_checksum ^= b;
                    _message_length_received++;
                    if (_message_length_received >= _message_length_expected) {
                        _state++;
                    }
                    break;

                case 6:
                    _state = 0;
                    if (_message_checksum == b) {
                        // message received, process
                        switch (_message_id) {
          

